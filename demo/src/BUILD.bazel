package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")

load("@build_bazel_rules_typescript//:defs.bzl", "ts_devserver", "ts_library")

ts_library(
    name = "src",
    srcs = ["main.ts"],
    tsconfig = "//:tsconfig.json",
    deps = [
        "//demo/src/app",
    ]
)

load("//misc:concat.bzl", "concat")

concat(
    name = "vendor_js",
    srcs = ["//:demo_vendor_js"],
    out = "vendor.min.js",
)

concat(
    name = "vendor_css",
    srcs = ["//:demo_vendor_css"],
    out = "vendor.css",
)

filegroup(
    name = "static_files",
    srcs = glob(["img/**"]) + [
        "index.html",
        ":vendor_js",
        ":vendor_css",
    ]
)

ts_devserver(
    name = "devserver",
    entry_module = "ng_bootstrap/demo/src/main",
    scripts = ["//:angular_bundles"],
    serving_path = "/bundle.min.js",
    static_files = [":static_files"],
    deps = ["//demo/src"],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle", "nodejs_binary")

rollup_bundle(
    name = "bundle",
    entry_point = "demo/src/main",
    deps = [":src"],
)

load("//misc:gzip.bzl", "gzip")

gzip(
    name = "gzipped_bundle",
    srcs = [":static_files", ":bundle"]
)

nodejs_binary(
    name = "prodserver",
    args = ["./demo/src", "-g"],
    data = [":static_files", ":bundle", ":gzipped_bundle"],
    entry_point = "http-server/bin/http-server",
)
